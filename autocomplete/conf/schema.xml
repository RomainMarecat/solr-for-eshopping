<?xml version="1.0" encoding="UTF-8" ?>
<schema name="autocomplete" version="0.1">
    <fields>		<!-- AutoComplete fields
		     Construct documents containing these fields for all suggestions you like to provide
		     Then use a dismax query to search on some fields, display some fields and boost others
		 -->
		<field name="id" type="string" indexed="true" stored="true" multiValued="false" required="true"/>
		<!-- The main text to return as the suggestion. This is not searched -->
		<field name="textsuggest" type="text_suggest" indexed="true" stored="true" omitNorms="true" multiValued="false"/>
		<!-- Suggest type/category. --> 
		<field name="type" type="string" indexed="true" stored="true" multiValued="false"/>
		<!-- An image URL for the autosuggest Ajax component to use as thumbnail in the suggestion -->
		<field name="image" type="string" indexed="false" stored="true"/>
		<field name="price" type="int" indexed="false" stored="true" />
		<field name="special_price" type="int" indexed="false" stored="true" />
		<field name="availability" type="string" indexed="true" stored="true"/>
                <field name="routing" type="string" indexed="false" stored="true"/>
                <field name="city_expanded" type="string" indexed="false" stored="true"/>
		<field name="pubDate" type="tdate" indexed="true" stored="true" multiValued="false" />                		
		<field name="coordinate" type="location" indexed="true" stored="true" multiValued="false" />
		<field name="link" type="string" indexed="true" stored="true" multiValued="false" />		
		<field name="ref_id" type="string" indexed="false" stored="true" multiValued="true" />
		
        	<field name="count" type="int" indexed="true" stored="true" multiValued="false" />
		
		<!-- A variant of textsuggest which only matches from the very left edge -->
		<copyField source="textsuggest" dest="textnge"/>
		<field name="textnge" type="autocomplete_edge" indexed="true" stored="false" />
		<!-- A variant of textsuggest which matches from the left edge of all terms (implicit truncation) -->
		<copyField source="textsuggest" dest="textng"/>
		<field name="textng" type="autocomplete_ngram" indexed="true" stored="false" omitNorms="true" omitTermFreqAndPositions="true" />
		
		<field name="keywords" type="string" indexed="true" stored="true" />
		
		<field name="keywordsng" type="autocomplete_ngram" indexed="true" stored="false" omitNorms="true" omitTermFreqAndPositions="true"/>
		<copyField source="keywords" dest="keywordsng"/>

		
        <field name="_version_" type="long" indexed="true" stored="true" multiValued="false" />
		<dynamicField name="*_s" type="string" indexed="false" stored="true" omitNorms="true" />
        <dynamicField name="*_coordinate"  type="tdouble" indexed="true"  stored="true" multiValued="false" />

    </fields>


    <!-- Field to use to determine and enforce document uniqueness.
       Unless this field is marked with required="false", it will be a required field
    -->
    <uniqueKey>id</uniqueKey>

    <types>	<!-- text_suggest : Matches whole terms in the suggest text  -->
		
		
		<fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate"/>
		        <dynamicField name="*_coordinate"  type="tdouble" indexed="true"  stored="true" multiValued="false" />
		
		
		<fieldType name="text_suggest" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.WordDelimiterFilterFactory" 
					    generateWordParts="1" 
					    generateNumberParts="1"
					    catenateWords="1"
					    catenateNumbers="1"
					    catenateAll="1"
					    splitOnCaseChange="1"
					    splitOnNumerics="1"
					    preserveOriginal="1"
				/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement=" " replace="all"/>
			        <filter class="solr.FrenchLightStemFilterFactory"/>
			</analyzer>
			<analyzer type="query">
				<charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.WordDelimiterFilterFactory" 
					    generateWordParts="0" 
					    generateNumberParts="0"
					    catenateWords="0"
					    catenateNumbers="0"
					    catenateAll="0"
					    splitOnCaseChange="0"
					    splitOnNumerics="0"
				/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement=" " replace="all"/>
			        <filter class="solr.FrenchLightStemFilterFactory"/>

			</analyzer>
		</fieldType>
		<fieldType name="autocomplete_edge" class="solr.TextField">
			<analyzer type="index">
				<charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
				<tokenizer class="solr.KeywordTokenizerFactory"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.PatternReplaceFilterFactory" pattern="([\.,;:-_])" replacement=" " replace="all"/>
				<filter class="solr.EdgeNGramFilterFactory" maxGramSize="30" minGramSize="3"/>
				<filter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement="" replace="all"/>
			</analyzer>
			<analyzer type="query">
				<charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
				<tokenizer class="solr.KeywordTokenizerFactory"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.PatternReplaceFilterFactory" pattern="([\.,;:-_])" replacement=" " replace="all"/>
				<filter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement="" replace="all"/>
				<filter class="solr.PatternReplaceFilterFactory" pattern="^(.{30})(.*)?" replacement="$1" replace="all"/>
			</analyzer>
		</fieldType>
		
		<fieldType name="autocomplete_ngram" class="solr.TextField">
			<analyzer type="index">
				<charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.EdgeNGramFilterFactory" maxGramSize="20" minGramSize="1"/>
				<filter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement="" replace="all"/>
			</analyzer>
			<analyzer type="query">
				<charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="0"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement="" replace="all"/>
				<filter class="solr.PatternReplaceFilterFactory" pattern="^(.{20})(.*)?" replacement="$1" replace="all"/>
			</analyzer>
		</fieldType>
		<!-- Define all the basic field types for consistency -->
		<fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
		<fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>
		<fieldtype name="binary" class="solr.BinaryField"/>
		<fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
		<fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
		<fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
		<fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
		<fieldType name="tint" class="solr.TrieIntField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
		<fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
		<fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
		<fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
		<fieldType name="date" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/>
		<fieldType name="tdate" class="solr.TrieDateField" omitNorms="true" precisionStep="6" positionIncrementGap="0"/>

    </types>

</schema>